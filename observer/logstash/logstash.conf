input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    # filter out timestamp in format ISO8601 to store in logdate
    match => ["message", "%{TIMESTAMP_ISO8601:logdate} \[(?<log_type>(.*?))\]\s{0,2}(?<module>.*?):"]
  }
  date {
    # convert timestamp to logstash.Timestamp (stored in target date_object)
    match => ["logdate", "ISO8601"]
    target => "date_object"
  }
  ruby {
    # https://stackoverflow.com/questions/39075736/converting-date-to-unix-time-in-logstash
    code => "event.set('unix_timestamp', (event.get('date_object').to_f * 1000).to_i)"
  }
  mutate {
    # remove timestamp
    gsub => ["message", "\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z ", ""]
    # remove log type
    gsub => ["message", "^\[.*?\]\s{0,2}", ""]
    # remove module
    gsub => ["message", "^.*?:\s{1,2}", ""]
    # rename docker_container to node
    rename => ["docker_container", "node"]
  }
  prune {
    whitelist_names => ["node", "offset", "message", "unix_timestamp", "log_type", "module"]
  }
}

output {
  http {
    url => "http://vizor:8090/log"
    http_method => "post"
    format => "json"
  }
}